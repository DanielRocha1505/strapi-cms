services:
  mysql:
    container_name: mysql-cms
    image: mysql:8.0
    restart: always
    command: --default-authentication-plugin=mysql_native_password --log_error_verbosity=1
    environment:
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
    volumes:
      - ./docker/mysql:/docker-entrypoint-initdb.d:rw

  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin:latest
    container_name: phpmyadmin-cms
    ports:
      - 7070:80
    restart: always
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: ${DATABASE_HOST}
      PMA_USER: ${DATABASE_USERNAME}
      PMA_PASSWORD: ${DATABASE_PASSWORD}
      UPLOAD_LIMIT: 300M
    volumes:
      - /sessions

  backend:
    container_name: backend-cms
    depends_on:
      - mysql
    build:
      dockerfile: ./docker/backend/Dockerfile.local
      context: .
      args:
        NODE_ENV: development
    platform: linux/amd64
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./src/backend:/opt/app
    ports:
      - 1337:1337

  frontend:
    container_name: frontend-cms
    depends_on:
      - mysql
      - backend
    build:
      dockerfile: ./docker/frontend/Dockerfile.local
      context: .
      args:
        NODE_ENV: development
    platform: linux/amd64
    restart: unless-stopped
    env_file:
      - .env
    links:
      - backend
    volumes:
      - ./src/frontend:/opt/app

  nginx:
    container_name: nginx-cms
    env_file:
      - ./.env
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile.local
    restart: always
    ports:
      - 80:80